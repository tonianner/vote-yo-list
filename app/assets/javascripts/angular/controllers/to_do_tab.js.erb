app.controller("ToDoCtrl", ToDoCtrl)

ToDoCtrl.$inject = ['ToDoFactory', '$scope', '$stateParams']

function ToDoCtrl(ToDoFactory, $scope, $stateParams) {
  console.log('To Do Controller')

  var ToDoList = ToDoFactory;

  // Show all task in selected event
  $scope.allTasks = ToDoList.query({eventId: $stateParams.id})

  // Blank new Task for Form >> Create Task & Update Task
  $scope.newTask = {};

  // Show selected Task
  // $scope.selectedTask = ToDoList.get({eventId: $stateParams.id})

  // Create New Event
  $scope.addTask = function() {
    ToDoList.save({eventId: $stateParams.id}, $scope.newTask, function(newTask) {
      $scope.allTasks.push(newTask);
      $scope.newTask = {}
    });
  };


  $scope.updateTask = function(id, data) {
    // Returns promise >> {$promise: c, $resolved: false}
    $scope.selectedTask = ToDoList.get({eventId: $stateParams.id, id: id})
    // returns object to be updated >> {id: 41, title: "title here"...}
    $scope.selectedTask.title = data
    // to update >> /api/event/eventId/tasks/id
    $scope.selectedTask.$update({eventId: $stateParams.id, id: id})
  }

  $scope.updateTaskDescrip = function(id, data) {
    // Returns promise >> {$promise: c, $resolved: false}
    $scope.selectedTask = ToDoList.get({eventId: $stateParams.id, id: id})
    // returns object to be updated >> {id: 41, title: "title here"...}
    $scope.selectedTask.description = data
    // to update >> /api/event/eventId/tasks/id
    $scope.selectedTask.$update({eventId: $stateParams.id, id: id})
  }

  // Delete Task
  $scope.deleteTask= function(id) {
    ToDoList.delete({eventId: $stateParams.id, id: id});
    var index = $scope.allTasks.indexOf(id);
    $scope.allTasks.splice(index, 1);
  }



// TEsting //
  $scope.users = [
    {id: 1, name: 'awesome user1', status: 2, group: 4, groupName: 'admin'},
    {id: 2, name: 'awesome user2', status: undefined, group: 3, groupName: 'vip'},
    {id: 3, name: 'awesome user3', status: 2, group: null}
  ];

  $scope.statuses = [
    {value: 1, text: 'status1'},
    {value: 2, text: 'status2'},
    {value: 3, text: 'status3'},
    {value: 4, text: 'status4'}
  ];

  $scope.groups = [];
  $scope.loadGroups = function() {
    return $scope.groups.length ? null : $http.get('/groups').success(function(data) {
      $scope.groups = data;
    });
  };

  $scope.showGroup = function(user) {
    if(user.group && $scope.groups.length) {
      var selected = $filter('filter')($scope.groups, {id: user.group});
      return selected.length ? selected[0].text : 'Not set';
    } else {
      return user.groupName || 'Not set';
    }
  };

  $scope.showStatus = function(user) {
    var selected = [];
    if(user.status) {
      selected = $filter('filter')($scope.statuses, {value: user.status});
    }
    return selected.length ? selected[0].text : 'Not set';
  };

  $scope.checkName = function(data, id) {
    if (id === 2 && data !== 'awesome') {
      return "Username 2 should be `awesome`";
    }
  };

  $scope.saveUser = function(data, id) {
    //$scope.user not updated yet
    angular.extend(data, {id: id});
    return $http.post('/saveUser', data);
  };

  // remove user
  $scope.removeUser = function(index) {
    $scope.users.splice(index, 1);
  };

  // add user
  $scope.addUser = function() {
    $scope.inserted = {
      id: $scope.users.length+1,
      name: '',
      status: null,
      group: null
    };
    $scope.users.push($scope.inserted);
  };



}
