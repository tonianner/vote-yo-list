app.controller('LocationCtrl',locationCtrl)

locationCtrl.$inject = ['LocationFactory', '$scope', '$stateParams', '_', '$http']

function locationCtrl(LocationFactory, $scope, $stateParams, _, $http) {
  console.log('LocationCtrl')

  var LocationList = LocationFactory

  $scope.allLocations = LocationList.query({eventId: $stateParams.id})

  $scope.newPlace = {};


  // Create Location
  $scope.addLocation = function() {
    LocationList.save({eventId: $stateParams.id}, $scope.newPlace, function(newPlace) {
      $scope.allLocations.push(newPlace);
      $scope.newPlace = {}
    });
  };

  // Delete Location
  $scope.deleteLocation= function(id) {
    LocationList.delete({eventId: $stateParams.id, id: id});
    var index = $scope.allLocations.indexOf(id);
    $scope.allLocations.splice(index, 1);
  }

  $scope.maxVotes = function(){
    $scope.maxPlaceVotes = _.max($scope.allLocations, function(place){ return place.votes; })

    console.log(_.isEmpty($scope.allLocations))
    console.log ($scope.maxPlaceVotes)
  }


  // UpVote button
  $scope.upVote = function (index) {
    if ($scope.allLocations[index] == null) {
      $scope.allLocations[index] = 0
    }

    $http({
      url: 'http://localhost:3000/api/events/' + $stateParams.id + '/locations/' + $scope.allLocations[index].id + '/vote',
      method: "PUT",
      data: {vote: 'upvote'}
    }).then(function (resp) {
      console.log(resp);
      $scope.allLocations[index].votes++;
    }, function (resp) {
      console.log(resp);
    })
  }

  $scope.downVote = function (index) {
    if ($scope.allLocations[index] == null) {
      $scope.allLocations[index] = 0
    }

    $http({
      url: 'http://localhost:3000/api/events/' + $stateParams.id + '/locations/' + $scope.allLocations[index].id + '/vote',
      method: "PUT",
      data: {vote: 'downvote'}
    }).then(function (resp) {
      console.log(resp);
      $scope.allLocations[index].votes--;
    }, function (resp) {
      console.log(resp);
    })
  }

}
